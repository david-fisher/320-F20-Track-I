CREATE TABLE students(
	S_ID INTEGER NOT NULL,
	Name VARCHAR(70) NOT NULL,
	PRIMARY KEY(S_ID)
);

CREATE TABLE professors(
	P_ID INTEGER NOT NULL,
	NAME VARCHAR(70) NOT NULL,
	PRIMARY KEY(P_ID)
);

CREATE TABLE courses(
	C_ID INTEGER NOT NULL,
	NAME VARCHAR(70) NOT NULL,
	PRIMARY KEY(C_ID)
);

CREATE TABLE scenarios(
	E_ID			INTEGER		NOT NULL,
	VERSION_ID		INTEGER		NOT NULL,
	NAME			VARCHAR(70),
	NUM_CONVERSATION	INTEGER,
	MATRIX			INTEGER[][]	NOT NULL,
	PUBLIC			BOOLEAN,
	CREATOR			INTEGER REFERENCES professors(P_ID),
	PRIMARY KEY(E_ID, VERSION_ID)		
);

CREATE TABLE pages(
	PAGE_ID		 INTEGER		NOT NULL,
	PAGE_TYPE	 VARCHAR(70),
	PAGE_TITLE	 VARCHAR(70),
	Scenario	 REFERENCES scenarios(E_ID, VERSION_ID),
	NEXT_PAGE_ID INTEGER		REFERENCES pages(PAGE_ID),
	PRIMARY KEY(PAGE_ID)
);

CREATE TABLE stakeholders(
	STK_ID		INTEGER		NOT NULL,
	NAME		VARCHAR(70)	NOT NULL,
	DESCRIPTION		TEXT,
	JOB			VARCHAR(70),
	MATRIX		INTEGER[][],
	Scenario	 (INTEGER,INTEGER)	REFERENCES scenarios(E_ID, VERSION_ID),
	PRIMARY KEY(STK_ID)
);

CREATE TABLE responses(
	S_ID		INTEGER REFERENCES students(S_ID),
	P_ID		INTEGER REFERENCES professors(P_ID),
	Scenario	REFERENCES scenarios(E_ID, VERSION_ID),
	C_ID		INTEGER REFERENCES courses(C_ID),
	DATE_TAKEN	DATE NOT NULL,
	CHOICE TEXT,
	PRIMARY KEY(S_ID, C_ID, Scenario, DATE_TAKEN)
);

CREATE TABLE assigned_to(
	Student		INTEGER REFERENCES students(S_ID),
	Scenario	REFERENCES scenarios(E_ID, VERSION_ID),
	PRIMARY KEY(Student,Scenario)
);

CREATE TABLE students_in(
	S_ID INTEGER REFERENCES students(S_ID),
	C_ID INTEGER REFERENCES courses(C_ID),
	PRIMARY KEY(S_ID,C_ID)
);

CREATE TABLE Professors_teach(
	P_ID INTEGER REFERENCES professors(P_ID),
	C_ID INTEGER REFERENCES courses(C_ID),
	PRIMARY KEY(P_ID,C_ID)
);

CREATE TABLE demographics(
	S_ID INTEGER REFERENCES students(S_ID),
	AGE INTEGER,
	GRADE VARCHAR(3),
	GENDER VARCHAR(10),
	RACE VARCHAR(10),
	MAJOR VARCHAR(70),
	PRIMARY KEY(S_ID)
);

CREATE TABLE reflections_taken(
	REFLECTIONS TEXT,
	S_ID		INTEGER REFERENCES responses(S_ID),
	C_ID		INTEGER REFERENCES responses(C_ID),
	Scenario	REFERENCES scenarios(E_ID, VERSION_ID),
	DATE_TAKEN	DATE REFERENCES responses(DATE_TAKEN),
	PRIMARY KEY(REFLECTIONS, S_ID, C_ID, Scenario, DATE_TAKEN)
);

CREATE TABLE conversations_had(
	S_ID		INTEGER REFERENCES responses(S_ID),
	C_ID		INTEGER REFERENCES responses(C_ID),
	Scenario	REFERENCES scenarios(E_ID, VERSION_ID),
	DATE_TAKEN	DATE REFERENCES responses(DATE_TAKEN),
	STAKEHOLDER INTEGER REFERENCES stakeholders(STK_ID),
	SCORE INTEGER,
	CONVERSATION_ID INTEGER REFERENCES conversations(CONVERSATION_ID),
	PRIMARY KEY(S_ID,C_ID,Scenario,DATE_TAKEN,STAKEHOLDER,CONVERSATION_ID)
);

CREATE TABLE action_page(
	PAGE_ID		INTEGER		REFERENCES pages(PAGE_ID),
	CHOICE		TEXT,
	RESULT_PAGE INTEGER,
	PRIMARY KEY(PAGE_ID, CHOICE)
);

CREATE TABLE reflection_questions(
	PAGE_ID					INTEGER		REFERENCES pages(PAGE_ID),
	REFLECTION_QUESTION		TEXT,
	PRIMARY KEY(PAGE_ID,REFLECTION_QUESTION)
);

CREATE TABLE event_page(
	PAGE_ID		INTEGER		REFERENCES pages(PAGE_ID),
	BODY		TEXT,
	PRIMARY KEY(PAGE_ID,BODY)
);

CREATE TABLE stakeholder_page(
	PAGE_ID INTEGER REFERENCES pages(PAGE_ID),
	STAKEHOLDER INTEGER REFERENCES stakeholders(STK_ID)
);

CREATE TABLE scenarios_for(
	Scenario	 REFERENCES scenarios(E_ID, VERSION_ID),
	C_ID		 INTEGER REFERENCES courses(C_ID),
	PRIMARY KEY(Scenario, C_ID)
);

CREATE TABLE stakeholders_in(
	STAKEHOLDER 	INTEGER REFERENCES stakeholders(STK_ID),
	Scenario	 (INTEGER,INTEGER)	REFERENCES scenarios(E_ID, VERSION_ID),
	PRIMARY KEY(STAKEHOLDER,Scenario)
);

CREATE TABLE conversations(
	STAKEHOLDER INTEGER REFERENCES stakeholders(STK_ID),
	CONVERSATION_ID INTEGER,
	QUESTION TEXT,
	RESPONSE TEXT,
	PRIMARY KEY(STAKEHOLDER, CONVERSATION_ID)
);

CREATE TABLE scenarios_in(
	Scenario	 (INTEGER,INTEGER)	REFERENCES scenarios(E_ID, VERSION_ID),
	C_ID	INTEGER REFERENCES courses(C_ID),
	PRIMARY KEY(Scenario,C_ID)
);